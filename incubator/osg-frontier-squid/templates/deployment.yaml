apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "osg-frontier-squid.fullname" . }}
  labels:
    app: {{ template "osg-frontier-squid.name" . }}
    chart: {{ template "osg-frontier-squid.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance }}

spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "osg-frontier-squid.name" . }}
      chart: {{ template "osg-frontier-squid.chart" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance }}

  template:
    metadata:
      labels:
        app: {{ template "osg-frontier-squid.name" . }}
        chart: {{ template "osg-frontier-squid.chart" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance }}
    spec:
      nodeSelector:
        storage: "local"
      containers:
      - name: osg-frontier-squid
        image: slateci/osg-frontier-squid:0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3128
          name: squid
        volumeMounts:
        - mountPath: /etc/squid/customize.sh
          subPath: customize.sh
          name: osg-frontier-squid-{{ .Values.Instance }}-configuration
        - mountPath: /var/cache/squid
          subPath: osg-frontier-squid-{{ .Values.Instance }}-cache
          name: osg-frontier-squid-{{ .Values.Instance }}-pvc
        - mountPath: /var/log/squid
          name: varlogsquid
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:7.0.0-alpha1
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: atlas-kibana.mwt2.org
        - name: ELASTICSEARCH_PORT
          value: "9200"
        - name: ELASTICSEARCH_USERNAME
          value: elastic
        - name: ELASTICSEARCH_PASSWORD
          value: changeme
        - name: ELASTIC_CLOUD_ID
          value:
        - name: ELASTIC_CLOUD_AUTH
          value:
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: filebeats-{{ .Values.Instance }}-config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: filebeats-{{ .Values.Instance }}-inputs
          mountPath: /usr/share/filebeat/inputs.d
          readOnly: true
        - name: filebeats-{{ .Values.Instance }}-data
          mountPath: /usr/share/filebeat/data
        - name: varlogsquid
          mountPath: /var/log/squid
      volumes:
        - name: osg-frontier-squid-{{ .Values.Instance }}-configuration
          configMap:
            name: osg-frontier-squid-{{ .Values.Instance }}-configuration
            items:
              - key: customize.sh
                path: customize.sh
            defaultMode: 0755
        - name: osg-frontier-squid-{{ .Values.Instance }}-pvc
          persistentVolumeClaim:
            claimName: osg-frontier-squid-{{ .Values.Instance }}-pvc
        - name: filebeats-{{ .Values.Instance }}-config
          configMap:
            defaultMode: 0600
            name: filebeat-{{ .Values.Instance }}-config
        - name: filebeats-{{ .Values.Instance }}-inputs
          configMap:
            defaultMode: 0600
            name: filebeat-{{ .Values.Instance }}-inputs
        # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
        - name: filebeats-{{ .Values.Instance }}-data
          hostPath:
            persistentVolumeClaim:
              claimName: filebeats-{{ .Values.Instance }}-pvc
        - name: varlogsquid
          emptyDir: {}
