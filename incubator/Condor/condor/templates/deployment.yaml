apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "condor.fullname" . }}
  labels:
    app: {{ template "condor.fullname" . }}
    chart: {{ template "condor.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "condor.fullname" . }}
      chart: {{ template "condor.chart" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance }}
  template:
    metadata:
      labels: 
        app: {{ template "condor.fullname" . }}
        chart: {{ template "condor.chart" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance }}
    spec:
      volumes:
        ################ BEGIN CONFIG
      - name: scratch
        hostPath:
          path: /scratch/condor
          type: Directory
          ################# END CONFIG
      containers:
      - name: htcondor-worker
        image: lincolnbryant/htcondor-docker-cuda:390.12
        volumeMounts:
        - name: scratch
          mountPath: "/var/lib/condor/execute"
        env:
          #################### BEGIN CONFIG
        - name: _CONDOR_MEMORY
          value: {{ .Values.CondorConfig.MemoryLimit | quote }}
        - name: _CONDOR_NUM_CPUS
          value: {{ .Values.CondorConfig.NumCPUs | quote }}
        - name: _CONDOR_NODEID
          value: {{ .Values.CondorConfig.NodeID | quote }}
          ##################### END CONFIG
        - name: _CONDOR_STARTD_ATTRS
          value: '$(STARTD_ATTRS) NODEID'
        resources:
          requests:
            memory: "{{ .Values.CondorConfig.MemoryLimit }}Mi" # mach configuration above
            cpu:    "{{ .Values.CondorConfig.NumCPUs }}000m"
          {{ if .Values.CondorConfig.UseGPU }}
          limits:
            nvidia.com/gpu: {{ .Values.CondorConfig.NumGPUs }}
          {{ end }}
        lifecycle:
          preStop:
            exec:
              command: ["/usr/sbin/condor_off","-peaceful"]