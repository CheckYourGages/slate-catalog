apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "condor.fullname" . }}
  labels:
    app: {{ template "condor.fullname" . }}
    chart: {{ template "condor.chart" . }}
    release: {{ .Release.Name }}
    instance: {{ .Values.Instance }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "condor.fullname" . }}
      chart: {{ template "condor.chart" . }}
      release: {{ .Release.Name }}
      instance: {{ .Values.Instance }}
  template:
    metadata:
      labels: 
        app: {{ template "condor.fullname" . }}
        chart: {{ template "condor.chart" . }}
        release: {{ .Release.Name }}
        instance: {{ .Values.Instance }}
    spec:
      volumes:
      - name: executedir
        {{ if .Values.CondorConfig.ExecuteDir }}
        hostPath:
          path: {{ .Values.CondorConfig.ExecuteDir }} 
          type: Directory
        {{ else }}
        emptyDir: {}
        {{ end }}  
      - name: condor-passwordfile-volume
        secret:
          secretName: {{ .Values.CondorConfig.PasswordFileSecret }}
          items: 
          - key: condor_password
            path: condor_password
      containers:
      - name: htcondor-worker
        image: lincolnbryant/htcondor-docker-cuda:390.12
        volumeMounts:
        - name: executedir
          mountPath: "/var/lib/condor/execute"
        - name: condor-passwordfile-volume
          mountPath: "/etc/condor/condor_password"
        env:
        - name: _CONDOR_COLLECTOR_HOST
          value: {{ .Values.CondorConfig.CollectorHost | quote }}
        - name: _CONDOR_MEMORY
          value: {{ .Values.CondorConfig.MemoryLimit | quote }}
        - name: _CONDOR_NUM_CPUS
          value: {{ .Values.CondorConfig.NumberCPUs | quote }}
        - name: _CONDOR_NODEID
          value: {{ .Values.CondorConfig.NodeID | quote }}
        - name: _CONDOR_STARTD_ATTRS
          value: '$(STARTD_ATTRS) NODEID'
        resources:
          requests:
            memory: "{{ .Values.CondorConfig.MemoryLimit }}Mi"
            cpu:    "{{ .Values.CondorConfig.NumCPUs }}000m"
          {{ if .Values.CondorConfig.UseGPU }}
          limits:
            nvidia.com/gpu: {{ .Values.CondorConfig.NumGPUs }}
          {{ end }}
        lifecycle:
          preStop:
            exec:
              command: ["/usr/sbin/condor_off","-peaceful"]
